# Installs HBase
---
- set_fact:
    hbase_tarball: "{{ sb_install_dir }}/{{ hbase.filename }}"

- name: Download HBase binary tarball
  get_url:
    url: "{{ hbase.url }}"
    dest: "{{ hbase_tarball }}"

- name: Extract downloaded tarball
  unarchive:
    src: "{{ hbase_tarball }}"
    dest: "{{ sb_install_dir }}"
    owner: "{{ exec_user }}"
    group: "{{ exec_user }}"
    remote_src: yes

- set_fact:
    hbase_home: "{{ sb_install_dir }}/{{ hbase.creates }}"
    hbase_conf: "{{ sb_install_dir }}/{{ hbase.creates }}/conf"

- name: Configure HBase - Step 1
  template:
    src: "{{ item }}"
    dest: "{{ hbase_conf }}/{{ item | basename | regex_replace('.j2','') }}"
    owner: "{{ exec_user }}"
    group: "{{ exec_user }}"
  with_fileglob:
    - ../templates/*

- name: Configure HBase - Step 2
  lineinfile:
    path: "{{ hbase_conf }}/hbase-env.sh"
    regexp: '^export JAVA_HOME='
    line: "export JAVA_HOME={{ java_home }}"
   
- name: Update bashrc for HBase
  lineinfile:
    path: /etc/profile
    line: 'export {{ item.key }}={{ item.val }}'
  with_items:
    - { key: 'HBASE_HOME', val: '{{ hbase_home }}' }
    - { key: 'PATH', val: '{{ hbase_home }}/bin:$PATH' }
  when: os == 'Debian' or os == 'Ubuntu'

- name: Delete downloaded tarball
  file:
    path: "{{ hbase_tarball }}"
    state: absent
